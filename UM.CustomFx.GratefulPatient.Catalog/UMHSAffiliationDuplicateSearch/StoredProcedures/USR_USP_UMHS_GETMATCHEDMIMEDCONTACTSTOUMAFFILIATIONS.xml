<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:c="bb_appfx_commontypes" 
	ID="73458f77-9701-4b13-8f3c-7e386da8f10d"
	Name="USR_USP_UMHS_GETMATCHEDMIMEDCONTACTSTOUMAFFILIATIONS"
	Description="Get MIMED Contacts who are linked to U-M affiliated DART constiutents"
	Author="UM Dev"
	SPName="USR_USP_UMHS_GETMATCHEDMIMEDCONTACTSTOUMAFFILIATIONS"
	>

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_UMHS_GETMATCHEDMIMEDCONTACTSTOUMAFFILIATIONS(@MATCHSETID uniqueidentifier output)
as
set nocount on;
begin
  declare @DATEADDED datetime=GETDATE(); 
  declare @CHANGEAGENTID uniqueidentifier=null;

  if @MATCHSETID is NULL
  begin
    set @MATCHSETID=NEWID();
  end
  
  if @CHANGEAGENTID is null  
	  exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @ID=@CHANGEAGENTID output;
  
  /*
   * Get MIMED Contacts who are linked to DART constituents who are affiliated to U-M
   */
  insert into dbo.USR_UMHS_MATCHEDMIMEDCONTACTSTOUMAFFILIATIONS (ID, MATCHSETID, CONSTITUENTID, MRN, UMHSCONSTITUENTID, ADDRESSID, EMAILADDRESSID, PHONEID, COMPOSITESCORE, ADDEDBYID, CHANGEDBYID, DATEADDED, DATECHANGED)
  select 
	    NEWID() ID,
      @MATCHSETID MATCHSETID,
	    a.CONSTITUENTID,
	    d.MRN,
      d.CONSTITUENTID UMHSCONSTITUENTID,
      NULL ADDRESSID,
      NULL EMAILADDRESSID,
      NULL PHONEID,
      100 COMPOSITESCORE,
      @CHANGEAGENTID ADDEDBYID,
      @CHANGEAGENTID CHANGEDBYID,
      @DATEADDED DATEADDED,
      @DATEADDED DATECHANGED
  from USR_UMHS_V_UMAFFILIATEDCONSTITUENTS a
  inner join USR_UMHS_DATA d on d.CONSTITUENTID=a.CONSTITUENTID
  where
    len(ISNULL(d.MRN, N'')) > 1

  /*
   * Get list of MIMED Friend records that are linked to MIMED Friend (shell) constituent records who
   * also match up to DART individual constiutents by 100-85% where 85% is the value assigned to 
   * the OVERALLMATCHTHRESHOLD for the 'MIMED Data - Contacts' batch template.
   */
  declare	@OVERALLMATCHTHRESHOLD TINYINT
  declare @AUTOMATCHTHRESHOLD    TINYINT

  select 
	  @AUTOMATCHTHRESHOLD=cast(AUTOMATCHTHRESHOLD as tinyint),
	  @OVERALLMATCHTHRESHOLD=cast(OVERALLMATCHTHRESHOLD as tinyint)
  from BATCHTEMPLATE
  where 
	  ID='DEDEA4B8-B29B-4102-AF44-155C8B7D5C8C'	-- 'MIMED Data - Contacts' batch template

  ;with MIMEDSHELLS (UMHSID, MRN, MIMEDFRIENDCONSTITUENTID, UMHSCONSTITUENTID, TITLECODEID, FIRSTNAME, MIDDLENAME, KEYNAME, SUFFIXCODEID, ADDRESSBLOCK, POSTCODE, COUNTRYID, EMAILADDRESS, PHONENUMBER)
  AS
  (
	  select
		  d.ID UMHSID,
		  d.MRN,
		  d.CONSTITUENTID MIMEDFRIENDCONSTITUENTID,
      d.CONSTITUENTID UMHSCONSTITUENTID,
		  d.TITLECODEID,
		  d.FIRSTNAME,
		  d.MIDDLENAME,
		  d.KEYNAME,
		  d.SUFFIXCODEID,
		  a.ADDRESSBLOCK,
		  a.POSTCODE,
		  a.COUNTRYID,
		  e.EMAILADDRESS,
		  p.NUMBER
	  from dbo.USR_UMHS_DATA d
	  INNER JOIN CONSTITUENT C ON C.ID=d.CONSTITUENTID
	  left outer join dbo.USR_UMHS_ADDRESS a on a.UMHSID=d.ID
	  left outer join dbo.USR_UMHS_EMAILADDRESS e on e.UMHSID=d.ID
	  left outer join dbo.USR_UMHS_PHONE p on p.UMHSID=d.ID
	  where
		  c.KEYNAME like 'MIMED FRIEND M[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'
	  and len(ISNULL(d.MRN, N'')) > 1
  ) 
  insert into dbo.USR_UMHS_MATCHEDMIMEDCONTACTSTOUMAFFILIATIONS (ID, MATCHSETID, CONSTITUENTID, MRN, UMHSCONSTITUENTID, ADDRESSID, EMAILADDRESSID, PHONEID, COMPOSITESCORE, ADDEDBYID, CHANGEDBYID, DATEADDED, DATECHANGED)
  select 
    newid() ID,
    @MATCHSETID MATCHSETID,
    a.CONSTITUENTID,
    m.MRN,
    m.UMHSCONSTITUENTID,
    a.ADDRESSID,
    a.EMAILADDRESSID,
    a.PHONEID,
    a.COMPOSITESCORE,
    @CHANGEAGENTID,
    @CHANGEAGENTID,
    @DATEADDED,
    @DATEADDED
  from MIMEDSHELLS m
  OUTER APPLY 
	  [DBO].[USR_UFN_UMHS_UMAFFILIATEDCONSTITUENTMATCHES] (m.TITLECODEID, m.FIRSTNAME, m.MIDDLENAME, m.KEYNAME, m.SUFFIXCODEID, m.ADDRESSBLOCK, m.POSTCODE, m.COUNTRYID, m.EMAILADDRESS, m.PHONENUMBER, @OVERALLMATCHTHRESHOLD, @AUTOMATCHTHRESHOLD) a
  WHERE
	  a.COMPOSITESCORE >= @OVERALLMATCHTHRESHOLD

  end
		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
